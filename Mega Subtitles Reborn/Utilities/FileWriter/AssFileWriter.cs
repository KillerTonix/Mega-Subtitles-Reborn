using Mega_Subtitles_Reborn.Utilities.Subtitles;
using Mega_Subtitles_Reborn.Utilitis.FileReader;
using System.IO;
using System.Text;

namespace Mega_Subtitles_Reborn.Utilitis.FileWriter
{
    public class AssFileWriter
    {

        public static void WriteAssFile(string assFilePath)
        {
            var subtitlesData = JsonReader.ReadAssSubtitlesDataJson(GeneralSettings.Default.ProjectCahceJsonPath);

            using var writer = new StreamWriter(assFilePath, true, Encoding.UTF8);
            writer.WriteLine(ChangeAssHeader(GetAssHeader(subtitlesData.SubtitlesPath)));
            List<SubtitlesEnteries> entries = subtitlesData.Entries;

            foreach (var item in entries)
            {
                writer.WriteLine($"Dialogue: {item.Layer},{item.Start},{item.End},{item.Style},{item.Actor},0,0,0,{item.Effect},{item.Text.Replace(@"\N", Environment.NewLine)}");
            }
        }


        private static string[] GetAssHeader(string OldSubtitlesFilePath)
        {
            List<string> header = [];
            foreach (string line in File.ReadAllLines(OldSubtitlesFilePath))
            {
                header.Add(line); // Add the line to the list
                if (line.Contains("Format: Layer, Start, End"))
                    break; // Stop reading lines after finding the target line
            }

            return [.. header]; // Convert the list to an array before returning
        }

        private static string ChangeAssHeader(string[] Header)
        {

            for (int i = 0; i < Header.Length; i++)
            {
                if (Header[i].Contains("; Script generated by Aegisub 3.2.2"))
                {
                    Header[i] = "; File generated by Mega Subtitles";
                }
                else if (Header[i].Contains("; http://www.aegisub.org/"))
                {
                    Header[i] = "; Author - Artur Tonoyan\r\n; VK - https://vk.com/aatonoyan\r\n; Discord - arturtonoyan\r\n; Email - artur.tonoyan2012@yandex.ru\r\n Telegram - @BioWareZ";
                }
            }


            return string.Join("\n", Header);
        }
    }



}
